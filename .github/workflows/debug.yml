name: Debug Build

on:
  workflow_dispatch: # Manual trigger only

jobs:
  debug:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Elm and Tailwind
        run: |
          npm install -g elm
          npm install -D tailwindcss

      - name: Project Structure
        run: |
          echo "Current directory:"
          pwd
          echo "Repository content:"
          ls -la
          echo "Source directory:"
          ls -la src || echo "src directory not found"
          echo "Public directory (before build):"
          ls -la public || echo "public directory not found"

      - name: Create directories
        run: |
          mkdir -p public
          mkdir -p src/css

      - name: Verify Elm files
        run: |
          echo "Main.elm exists?"
          if [ -f "src/Main.elm" ]; then echo "YES"; else echo "NO"; fi
          echo "Content of src directory:"
          ls -la src/

      - name: Build Elm
        run: |
          elm make src/Main.elm --output=public/main.js || echo "Elm build failed"
          echo "Elm build result:"
          ls -la public/ || echo "public directory not found after Elm build"

      - name: Create Tailwind config
        run: |
          # Create tailwind config file line by line
          echo "module.exports = {" > tailwind.config.js
          echo "  content: ['./public/index.html', './src/**/*.elm']," >> tailwind.config.js
          echo "  theme: { extend: {} }," >> tailwind.config.js
          echo "  plugins: []" >> tailwind.config.js
          echo "}" >> tailwind.config.js
          # Show created config
          cat tailwind.config.js

      - name: Create CSS input
        run: |
          # Create CSS input file
          echo "@tailwind base;" > src/css/input.css
          echo "@tailwind components;" >> src/css/input.css
          echo "@tailwind utilities;" >> src/css/input.css
          # Show created CSS
          cat src/css/input.css

      - name: Build Tailwind
        run: |
          npx tailwindcss -i ./src/css/input.css -o ./public/output.css --minify || echo "Tailwind build failed"
          echo "Tailwind build result:"
          ls -la public/

      - name: Create HTML
        run: |
          # Create basic HTML file
          echo "<!DOCTYPE html>" > public/index.html
          echo "<html>" >> public/index.html
          echo "  <head>" >> public/index.html
          echo "    <meta charset=\"UTF-8\">" >> public/index.html
          echo "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">" >> public/index.html
          echo "    <title>Elm with Everbush Theme - Debug</title>" >> public/index.html
          echo "    <link href=\"output.css\" rel=\"stylesheet\">" >> public/index.html
          echo "    <script src=\"main.js\"></script>" >> public/index.html
          echo "  </head>" >> public/index.html
          echo "  <body>" >> public/index.html
          echo "    <div id=\"elm-app\"></div>" >> public/index.html
          echo "    <script>" >> public/index.html
          echo "      document.addEventListener('DOMContentLoaded', function() {" >> public/index.html
          echo "        try {" >> public/index.html
          echo "          if (typeof Elm !== 'undefined' && Elm.Main) {" >> public/index.html
          echo "            console.log('Elm found, initializing app');" >> public/index.html
          echo "            var app = Elm.Main.init({" >> public/index.html
          echo "              node: document.getElementById('elm-app')" >> public/index.html
          echo "            });" >> public/index.html
          echo "          } else {" >> public/index.html
          echo "            console.error('Elm not found or Elm.Main not available');" >> public/index.html
          echo "            document.getElementById('elm-app').innerHTML = '<div style=\"padding: 20px; color: red;\">Elm application failed to load</div>';" >> public/index.html
          echo "          }" >> public/index.html
          echo "        } catch (e) {" >> public/index.html
          echo "          console.error('Error initializing Elm app:', e);" >> public/index.html
          echo "          document.getElementById('elm-app').innerHTML = '<div style=\"padding: 20px; color: red;\">Error: ' + e.message + '</div>';" >> public/index.html
          echo "        }" >> public/index.html
          echo "      });" >> public/index.html
          echo "    </script>" >> public/index.html
          echo "    <div style=\"padding: 20px; margin-top: 20px; border: 1px solid #ccc;\">" >> public/index.html
          echo "      <h2>Debug Information</h2>" >> public/index.html
          echo "      <p>Page loaded at: <span id=\"timestamp\"></span></p>" >> public/index.html
          echo "      <p>Elm loaded: <span id=\"elm-status\">Checking...</span></p>" >> public/index.html
          echo "      <script>" >> public/index.html
          echo "        document.getElementById('timestamp').textContent = new Date().toISOString();" >> public/index.html
          echo "        setTimeout(function() {" >> public/index.html
          echo "          document.getElementById('elm-status').textContent = " >> public/index.html
          echo "            (typeof Elm !== 'undefined') ? 'Yes' : 'No';" >> public/index.html
          echo "        }, 500);" >> public/index.html
          echo "      </script>" >> public/index.html
          echo "    </div>" >> public/index.html
          echo "  </body>" >> public/index.html
          echo "</html>" >> public/index.html

      - name: Final directory structure
        run: |
          echo "Final public directory content:"
          ls -la public/
          echo "File sizes:"
          du -h public/*

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: public
          branch: gh-pages-debug
          clean: true
